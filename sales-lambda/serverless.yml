service: my-experiment
frameworkVersion: '3'

provider:
  name: aws
  stage: ${opt:stage, 'develop'}
  region: us-east-1
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:Query'
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.EVENT_STORE}
  environment:
    EVENT_STORE: sales_event_store
    REGION: ${self:provider.region}
    EVENT_BUS_NAME: sales-event-bus

plugins:
  - serverless-plugin-monorepo

resources:
  Resources:
    # should be using version as internal range key.
    EventStoreTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.EVENT_STORE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: 'S'
          - AttributeName: createdAt
            AttributeType: 'S'
          - AttributeName: aggregateId
            AttributeType: 'S'
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        BillingMode: PROVISIONED
        GlobalSecondaryIndexes:
          - IndexName: AggregateIdIndex
            KeySchema:
              - AttributeName: aggregateId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

functions:
  NewSale:
    handler: .build/functions/NewSale/handler.handler
  ChargeReturnHandler:
    handler: .build/functions/ChargeReturnHandler/handler.handler
